## CSE 331 hw-setup Questions
## Part 7: Answering Questions About the Code

1. Why did Fibonacci fail the testThrowsIllegalArgumentException< test? What (if anything) did
you have to do to fix it? If you did not have to change anything to fix this issue, explain why.

The testThrowsIllegalArgumentException test failed because it detected an illegalArgumentException
was thrown by the Fibonacci program when 0 was entered as an argument for the method getFibTerm(int n).
This was fixed when I changed the body of the getFibTerm method to only throw an
illegalArgumentException when n < 0 rather than n <= 0. This assures that only negative values of n
causes the method to throw an illegalArgumentException, and 0 is not negative.


2. Why did Fibonacci fail the testBaseCase test? What (if anything) did you have to do to fix
it? If you did not have to change anything to fix this issue, explain why.

The testBaseCase test failed because Fibonacci's getFibTerm method threw an illegalArgumentException
when 0 was input as an argument. The 0th term given by Fibonacci should exist and should be a 1, as
should the 1st term. I did not have to change any code beyond what I did to fix
testThrowsIllegalArgumentException because the issue resolves itself when getFibTerm(0) no longer
throws an exception, as that case will automatically fall into the else if
branch and cause getFibTerm to return 1.

3.Why did Fibonacci fail the testInductiveCase test? What (if anything) did you have to do to
fix it? If you did not have to change anything to fix this issue, explain why.

The testInductiveCase test failed because the test expects 0-based indices for the Fibonacci sequence.
However, the value returned from getFibTerm(2) (third term) was a 1 and should be a 2. This was resolved
when I changed the code of getFibTerm to only return 1 if n < 2 rather than n <= 2 (assuming n is non-negative).

## Part 8: Debugger Tutorial

1. What are the values of "x", "y", and "sum" printed by your statement? Why was x not equal 
to the first integer entered here, and how could we fix this?

My statement printed x as being 4, y as being 4, and the sum as being 0. In this case, x was not
equal to the integer (5) I entered because in the main method, when x is assigned a value, the
entry to the console will be divided by 2 before being multiplied by 2. Since Scanner console detects
an int, integer division will be used, which results in trailing decimals being cut off. This problem
could be fixed if console.nextInt was not divided by 2 then multiplied by 2, and is instead just
assigned to x.

2. What are all the names and values listed in the “Variables” panel? What does the “frames” 
tab list as the current method and line number? (Write down the text that was highlighted when 
the Debug perspective first opened.)

The "Variables" panel contains the variable x with a value of 3 and the variable y with a value of 4.
The "Frames" tab lists the current method as computeSum, and the line number listed is 43.

3. What are all the names and values listed in the “Variables” panel after each of the two step overs?

The variables are: x with a value of 3, y with a value of 4, and sum with a value of -1.
